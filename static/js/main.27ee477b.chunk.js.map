{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","useState","list","setList","form","setForm","qrImg","setQRSrc","updateItem","idx","verified","slice","className","src","style","maxWidth","maxHeight","class","type","placeholder","aria-label","value","onChange","e","target","onKeyPress","key","console","log","length","alert","qrSrc","qr","level","size","push","mssv","addToList","autoFocus","padding","overflow","width","map","userSelect","onClick","data-toggle","data-target","deleteInList","tabindex","role","id","data-dismiss","aria-hidden","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.27ee477b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport qr from \"qr-encode\";\r\n\r\nfunction App() {\r\n  const [list, setList] = useState([]);\r\n  const [form, setForm] = useState(\"\");\r\n  const [qrImg, setQRSrc] = useState(\"\");\r\n\r\n  const addToList = () => {\r\n    if (!form || form.length < 6 || form.length > 10) {\r\n      alert(\"MSSV không hợp lệ!\");\r\n      return;\r\n    }\r\n    const qrSrc = qr(form, { level: \"L\", size: 12 });\r\n    list.push({ mssv: form, qrSrc, verified: false });\r\n    setList(list);\r\n    setForm(\"\");\r\n  };\r\n\r\n  const deleteInList = (idx) => {\r\n    setList([...list.slice(0, idx), ...list.slice(idx + 1)]);\r\n  };\r\n\r\n  const updateItem = (idx, verified) => {\r\n    setList([\r\n      ...list.slice(0, idx),\r\n      { ...list[idx], verified },\r\n      ...list.slice(idx + 1),\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"card mx-auto m-5 p-5 col-6 shadow bg-dark\">\r\n        <div className=\"row\">\r\n          <img\r\n            src=\"https://nctu.edu.vn/dist/image/icon/logo.png\"\r\n            style={{\r\n              maxWidth: 150,\r\n              maxHeight: 150,\r\n            }}\r\n            className=\"mx-auto mb-5\"\r\n          />\r\n        </div>\r\n        <div class=\"input-group mb-3 col-10 mx-auto\">\r\n          <input\r\n            type=\"number\"\r\n            class=\"form-control add-item-inp px-3\"\r\n            placeholder=\"Nhập MSSV...\"\r\n            aria-label=\"Nhập MSSV...\"\r\n            value={form}\r\n            onChange={(e) => setForm(e.target.value)}\r\n            onKeyPress={(e) => {\r\n              if (e.key === \"Enter\") {\r\n                addToList();\r\n                return;\r\n              }\r\n              console.log(e.key);\r\n            }}\r\n            autoFocus\r\n          />\r\n        </div>\r\n        {!!list.length && (\r\n          <div class=\"row mb-3 bordered rounded\" style={{ padding: \"15px\" }}>\r\n            <div className=\"col col-10 mx-auto\">\r\n              <table\r\n                class=\"table table-hover table-dark\"\r\n                style={{ maxHeight: 250, overflow: \"auto\" }}\r\n              >\r\n                <thead class=\"thead-inverse\">\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>MSSV</th>\r\n                    <th style={{ width: 150 }}></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {list.map(({ mssv, qrSrc, verified }, idx) => (\r\n                    <tr key={idx}>\r\n                      <td>{idx + 1}</td>\r\n                      <td>{mssv}</td>\r\n                      <td style={{ userSelect: \"none\" }}>\r\n                        {(verified && (\r\n                          <i\r\n                            className=\"material-icons text-success btn-icon mr-3\"\r\n                            onClick={() => updateItem(idx, false)}\r\n                          >\r\n                            check_circle_outline\r\n                          </i>\r\n                        )) || (\r\n                          <i\r\n                            className=\"material-icons text-warning btn-icon mr-3\"\r\n                            onClick={() => updateItem(idx, true)}\r\n                          >\r\n                            highlight_off\r\n                          </i>\r\n                        )}\r\n                        <i\r\n                          className=\"material-icons text-info btn-icon mr-3\"\r\n                          onClick={() => setQRSrc(qrSrc)}\r\n                          data-toggle=\"modal\"\r\n                          data-target=\"#qr\"\r\n                        >\r\n                          visibility\r\n                        </i>\r\n                        <i\r\n                          className=\"material-icons text-danger btn-icon\"\r\n                          onClick={() => deleteInList(idx)}\r\n                        >\r\n                          delete\r\n                        </i>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div class=\"modal\" tabindex=\"-1\" role=\"dialog\" id=\"qr\">\r\n        <div class=\"modal-dialog\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">QR</h5>\r\n              <button\r\n                type=\"button\"\r\n                class=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body row\">\r\n              <img src={qrImg} className=\"mx-auto\" />\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-primary btn-block\"\r\n                data-dismiss=\"modal\"\r\n              >\r\n                Đóng\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}